@{
    ViewData["Title"] = "Notifications";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="page-title">Notifications</h1>
            <p class="page-subtitle">Manage system notifications and alerts</p>
        </div>
        <div class="page-actions">
            <button class="btn btn-modern btn-primary-modern" onclick="createNotification()">
                <i class="fas fa-plus"></i>
                Create Notification
            </button>
        </div>
    </div>
</div>

<!-- Notification Statistics -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="modern-card text-center">
            <div class="h3 text-primary mb-1">24</div>
            <div class="text-muted">Total Notifications</div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="modern-card text-center">
            <div class="h3 text-warning mb-1">8</div>
            <div class="text-muted">Unread</div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="modern-card text-center">
            <div class="h3 text-success mb-1">16</div>
            <div class="text-muted">Read</div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="modern-card text-center">
            <div class="h3 text-info mb-1">3</div>
            <div class="text-muted">Today</div>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="modern-card mb-4">
    <div class="row g-3">
        <div class="col-md-3">
            <label for="notificationSearch" class="form-label">Search Notifications</label>
            <div class="input-group">
                <span class="input-group-text"><i class="fas fa-search"></i></span>
                <input type="text" class="form-control" id="notificationSearch" placeholder="Search notifications...">
            </div>
        </div>
        <div class="col-md-2">
            <label for="typeFilter" class="form-label">Type</label>
            <select class="form-select" id="typeFilter">
                <option value="">All Types</option>
                <option value="info">Info</option>
                <option value="warning">Warning</option>
                <option value="error">Error</option>
                <option value="success">Success</option>
            </select>
        </div>
        <div class="col-md-2">
            <label for="statusFilter" class="form-label">Status</label>
            <select class="form-select" id="statusFilter">
                <option value="">All Status</option>
                <option value="unread">Unread</option>
                <option value="read">Read</option>
                <option value="archived">Archived</option>
            </select>
        </div>
        <div class="col-md-2">
            <label for="dateFilter" class="form-label">Date</label>
            <select class="form-select" id="dateFilter">
                <option value="">All Time</option>
                <option value="today">Today</option>
                <option value="week">This Week</option>
                <option value="month">This Month</option>
            </select>
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <button class="btn btn-outline-secondary w-100" onclick="clearNotificationFilters()">
                <i class="fas fa-times"></i>
                Clear
            </button>
        </div>
        <div class="col-md-1 d-flex align-items-end">
            <button class="btn btn-outline-primary w-100" onclick="markAllAsRead()">
                <i class="fas fa-check"></i>
            </button>
        </div>
    </div>
</div>

<!-- Notifications List -->
<div class="modern-card">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h5 class="mb-0">Recent Notifications</h5>
        <div class="btn-group btn-group-sm">
            <button class="btn btn-outline-secondary" onclick="refreshNotifications()">
                <i class="fas fa-sync-alt"></i>
            </button>
            <button class="btn btn-outline-danger" onclick="clearAllNotifications()">
                <i class="fas fa-trash"></i>
            </button>
        </div>
    </div>
    
    <div class="notifications-list" id="notificationsList">
        <!-- Notification Item 1 -->
        <div class="notification-item unread" data-type="info" data-status="unread" data-date="2024-01-15">
            <div class="d-flex align-items-start">
                <div class="flex-shrink-0">
                    <div class="notification-icon bg-info text-white rounded-circle d-flex align-items-center justify-content-center">
                        <i class="fas fa-info"></i>
                    </div>
                </div>
                <div class="flex-grow-1 ms-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="mb-1">New License Key Generated</h6>
                            <p class="mb-1 text-muted">A new license key has been generated for user john.doe@example.com</p>
                            <small class="text-muted">2 minutes ago</small>
                        </div>
                        <div class="notification-actions">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="1">
                            </div>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" onclick="markAsRead(1)">Mark as Read</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="archiveNotification(1)">Archive</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-danger" href="#" onclick="deleteNotification(1)">Delete</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Notification Item 2 -->
        <div class="notification-item unread" data-type="warning" data-status="unread" data-date="2024-01-15">
            <div class="d-flex align-items-start">
                <div class="flex-shrink-0">
                    <div class="notification-icon bg-warning text-white rounded-circle d-flex align-items-center justify-content-center">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                </div>
                <div class="flex-grow-1 ms-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="mb-1">High Memory Usage</h6>
                            <p class="mb-1 text-muted">System memory usage has reached 85%. Consider optimizing or scaling resources.</p>
                            <small class="text-muted">15 minutes ago</small>
                        </div>
                        <div class="notification-actions">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="2">
                            </div>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" onclick="markAsRead(2)">Mark as Read</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="archiveNotification(2)">Archive</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-danger" href="#" onclick="deleteNotification(2)">Delete</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Notification Item 3 -->
        <div class="notification-item read" data-type="success" data-status="read" data-date="2024-01-15">
            <div class="d-flex align-items-start">
                <div class="flex-shrink-0">
                    <div class="notification-icon bg-success text-white rounded-circle d-flex align-items-center justify-content-center">
                        <i class="fas fa-check-circle"></i>
                    </div>
                </div>
                <div class="flex-grow-1 ms-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="mb-1">Backup Completed</h6>
                            <p class="mb-1 text-muted">Daily backup has been completed successfully. 2.3GB of data backed up.</p>
                            <small class="text-muted">1 hour ago</small>
                        </div>
                        <div class="notification-actions">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="3">
                            </div>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" onclick="markAsUnread(3)">Mark as Unread</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="archiveNotification(3)">Archive</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-danger" href="#" onclick="deleteNotification(3)">Delete</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Notification Item 4 -->
        <div class="notification-item read" data-type="error" data-status="read" data-date="2024-01-14">
            <div class="d-flex align-items-start">
                <div class="flex-shrink-0">
                    <div class="notification-icon bg-danger text-white rounded-circle d-flex align-items-center justify-content-center">
                        <i class="fas fa-exclamation-circle"></i>
                    </div>
                </div>
                <div class="flex-grow-1 ms-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="mb-1">Database Connection Error</h6>
                            <p class="mb-1 text-muted">Failed to connect to the primary database. Connection restored after 2 minutes.</p>
                            <small class="text-muted">Yesterday</small>
                        </div>
                        <div class="notification-actions">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="4">
                            </div>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" onclick="markAsUnread(4)">Mark as Unread</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="archiveNotification(4)">Archive</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-danger" href="#" onclick="deleteNotification(4)">Delete</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Notification Modal -->
<div class="modal fade" id="createNotificationModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Notification</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createNotificationForm">
                    <div class="mb-3">
                        <label for="notificationTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="notificationTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="notificationMessage" class="form-label">Message</label>
                        <textarea class="form-control" id="notificationMessage" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="notificationType" class="form-label">Type</label>
                        <select class="form-select" id="notificationType">
                            <option value="info">Info</option>
                            <option value="warning">Warning</option>
                            <option value="error">Error</option>
                            <option value="success">Success</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="notificationPriority" class="form-label">Priority</label>
                        <select class="form-select" id="notificationPriority">
                            <option value="low">Low</option>
                            <option value="medium" selected>Medium</option>
                            <option value="high">High</option>
                            <option value="urgent">Urgent</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveNotification()">
                    <i class="fas fa-save"></i>
                    Create Notification
                </button>
            </div>
        </div>
    </div>
</div>

<style>
.notification-item {
    padding: 1rem;
    border-bottom: 1px solid #e2e8f0;
    transition: all 0.3s ease;
}

.notification-item:hover {
    background-color: #f8fafc;
}

.notification-item.unread {
    background-color: #f0f9ff;
    border-left: 4px solid #3b82f6;
}

.notification-item.read {
    opacity: 0.8;
}

.notification-icon {
    width: 40px;
    height: 40px;
    font-size: 1rem;
}

.notification-actions {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            setupEventListeners();
        });
        
        function setupEventListeners() {
            // Search functionality
            document.getElementById('notificationSearch').addEventListener('input', filterNotifications);
            document.getElementById('typeFilter').addEventListener('change', filterNotifications);
            document.getElementById('statusFilter').addEventListener('change', filterNotifications);
            document.getElementById('dateFilter').addEventListener('change', filterNotifications);
        }
        
        function filterNotifications() {
            const searchTerm = document.getElementById('notificationSearch').value.toLowerCase();
            const typeFilter = document.getElementById('typeFilter').value;
            const statusFilter = document.getElementById('statusFilter').value;
            const dateFilter = document.getElementById('dateFilter').value;
            
            const notifications = document.querySelectorAll('.notification-item');
            
            notifications.forEach(notification => {
                const title = notification.querySelector('h6').textContent.toLowerCase();
                const message = notification.querySelector('p').textContent.toLowerCase();
                const type = notification.dataset.type;
                const status = notification.dataset.status;
                const date = notification.dataset.date;
                
                const matchesSearch = !searchTerm || title.includes(searchTerm) || message.includes(searchTerm);
                const matchesType = !typeFilter || type === typeFilter;
                const matchesStatus = !statusFilter || status === statusFilter;
                const matchesDate = !dateFilter || matchesDateFilter(date, dateFilter);
                
                if (matchesSearch && matchesType && matchesStatus && matchesDate) {
                    notification.style.display = 'block';
                } else {
                    notification.style.display = 'none';
                }
            });
        }
        
        function matchesDateFilter(date, filter) {
            const notificationDate = new Date(date);
            const now = new Date();
            
            switch(filter) {
                case 'today':
                    return notificationDate.toDateString() === now.toDateString();
                case 'week':
                    const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
                    return notificationDate >= weekAgo;
                case 'month':
                    const monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);
                    return notificationDate >= monthAgo;
                default:
                    return true;
            }
        }
        
        function clearNotificationFilters() {
            document.getElementById('notificationSearch').value = '';
            document.getElementById('typeFilter').value = '';
            document.getElementById('statusFilter').value = '';
            document.getElementById('dateFilter').value = '';
            filterNotifications();
        }
        
        function markAsRead(notificationId) {
            const notification = document.querySelector(`[data-id="${notificationId}"]`) || 
                                document.querySelector(`input[value="${notificationId}"]`).closest('.notification-item');
            
            if (notification) {
                notification.classList.remove('unread');
                notification.classList.add('read');
                notification.dataset.status = 'read';
                showNotification('Notification marked as read', 'success');
            }
        }
        
        function markAsUnread(notificationId) {
            const notification = document.querySelector(`[data-id="${notificationId}"]`) || 
                                document.querySelector(`input[value="${notificationId}"]`).closest('.notification-item');
            
            if (notification) {
                notification.classList.remove('read');
                notification.classList.add('unread');
                notification.dataset.status = 'unread';
                showNotification('Notification marked as unread', 'success');
            }
        }
        
        function archiveNotification(notificationId) {
            const notification = document.querySelector(`[data-id="${notificationId}"]`) || 
                                document.querySelector(`input[value="${notificationId}"]`).closest('.notification-item');
            
            if (notification) {
                notification.style.display = 'none';
                notification.dataset.status = 'archived';
                showNotification('Notification archived', 'success');
            }
        }
        
        function deleteNotification(notificationId) {
            if (confirm('Are you sure you want to delete this notification?')) {
                const notification = document.querySelector(`[data-id="${notificationId}"]`) || 
                                    document.querySelector(`input[value="${notificationId}"]`).closest('.notification-item');
                
                if (notification) {
                    notification.remove();
                    showNotification('Notification deleted', 'success');
                }
            }
        }
        
        function markAllAsRead() {
            const unreadNotifications = document.querySelectorAll('.notification-item.unread');
            
            unreadNotifications.forEach(notification => {
                notification.classList.remove('unread');
                notification.classList.add('read');
                notification.dataset.status = 'read';
            });
            
            showNotification(`${unreadNotifications.length} notifications marked as read`, 'success');
        }
        
        function clearAllNotifications() {
            if (confirm('Are you sure you want to clear all notifications? This action cannot be undone.')) {
                const notifications = document.querySelectorAll('.notification-item');
                notifications.forEach(notification => notification.remove());
                showNotification('All notifications cleared', 'success');
            }
        }
        
        function refreshNotifications() {
            showNotification('Refreshing notifications...', 'info');
            
            // Simulate refresh
            setTimeout(() => {
                showNotification('Notifications refreshed', 'success');
            }, 1000);
        }
        
        function createNotification() {
            const modal = new bootstrap.Modal(document.getElementById('createNotificationModal'));
            modal.show();
        }
        
        function saveNotification() {
            const title = document.getElementById('notificationTitle').value;
            const message = document.getElementById('notificationMessage').value;
            const type = document.getElementById('notificationType').value;
            const priority = document.getElementById('notificationPriority').value;
            
            if (!title || !message) {
                showNotification('Please fill in all required fields', 'warning');
                return;
            }
            
            // Create new notification element
            const newNotification = createNotificationElement({
                id: Date.now(),
                title: title,
                message: message,
                type: type,
                priority: priority,
                timestamp: new Date().toISOString()
            });
            
            // Add to the top of the list
            const notificationsList = document.getElementById('notificationsList');
            notificationsList.insertBefore(newNotification, notificationsList.firstChild);
            
            // Close modal and reset form
            const modal = bootstrap.Modal.getInstance(document.getElementById('createNotificationModal'));
            modal.hide();
            document.getElementById('createNotificationForm').reset();
            
            showNotification('Notification created successfully', 'success');
        }
        
        function createNotificationElement(notification) {
            const div = document.createElement('div');
            div.className = 'notification-item unread';
            div.dataset.type = notification.type;
            div.dataset.status = 'unread';
            div.dataset.date = notification.timestamp.split('T')[0];
            
            const typeIcons = {
                'info': 'fas fa-info',
                'warning': 'fas fa-exclamation-triangle',
                'error': 'fas fa-exclamation-circle',
                'success': 'fas fa-check-circle'
            };
            
            const typeColors = {
                'info': 'bg-info',
                'warning': 'bg-warning',
                'error': 'bg-danger',
                'success': 'bg-success'
            };
            
            div.innerHTML = `
                <div class="d-flex align-items-start">
                    <div class="flex-shrink-0">
                        <div class="notification-icon ${typeColors[notification.type]} text-white rounded-circle d-flex align-items-center justify-content-center">
                            <i class="${typeIcons[notification.type]}"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h6 class="mb-1">${notification.title}</h6>
                                <p class="mb-1 text-muted">${notification.message}</p>
                                <small class="text-muted">Just now</small>
                            </div>
                            <div class="notification-actions">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="${notification.id}">
                                </div>
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="dropdown">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="#" onclick="markAsRead(${notification.id})">Mark as Read</a></li>
                                        <li><a class="dropdown-item" href="#" onclick="archiveNotification(${notification.id})">Archive</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item text-danger" href="#" onclick="deleteNotification(${notification.id})">Delete</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            return div;
        }
    </script>
}